{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rando\\\\Documents\\\\Visual Studio Code\\\\React VS Code\\\\shopmate\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useReducer } from \"react\";\nimport { cartReducer } from \"../reducer/cartReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  cartList: [],\n  total: 0\n};\nexport const CartContext = /*#__PURE__*/createContext(initialState);\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(cartReducer, initialState);\n  const addToCart = product => {\n    const updatedCartList = state.cartList.concat(product);\n    updatedTotal(updatedCartList);\n    dispatch({\n      type: \"ADD_TO_CART\",\n      payload: {\n        products: updatedCartList\n      }\n    });\n  };\n  const removeFromCart = product => {\n    const updatedCartList = state.cartList.filter(current => current.id !== product.id);\n    dispatch({\n      type: \"REMOVE_FROM CART\",\n      payload: {\n        products: updatedCartList\n      }\n    });\n  };\n  const updatetotal = products => {\n    let total = 0;\n    products.forEach(product => total = total + product.price);\n    dispatch({\n      type: \"UPDATE_TOTAL\",\n      payload: {\n        total\n      }\n    });\n  };\n  const value = {\n    total: state.total,\n    cartList: state.cartList,\n    addToCart,\n    removeFromCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 10\n  }, this);\n};\n_s(CartProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  const context = useContext(CartContext);\n  return context;\n};\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useContext","useReducer","cartReducer","jsxDEV","_jsxDEV","initialState","cartList","total","CartContext","CartProvider","children","_s","state","dispatch","addToCart","product","updatedCartList","concat","updatedTotal","type","payload","products","removeFromCart","filter","current","id","updatetotal","forEach","price","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","$RefreshReg$"],"sources":["C:/Users/rando/Documents/Visual Studio Code/React VS Code/shopmate/src/context/CartContext.js"],"sourcesContent":["import { createContext, useContext, useReducer } from \"react\";\r\nimport { cartReducer } from \"../reducer/cartReducer\";\r\n\r\nconst initialState = {\r\n  cartList: [],\r\n  total: 0,\r\n};\r\n\r\nexport const CartContext = createContext(initialState);\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(cartReducer, initialState);\r\n\r\n  const addToCart = (product) => {\r\n    const updatedCartList = state.cartList.concat(product);\r\n    updatedTotal(updatedCartList);\r\n    dispatch({\r\n      type: \"ADD_TO_CART\",\r\n      payload: {\r\n        products: updatedCartList,\r\n      },\r\n    });\r\n  };\r\n\r\n  const removeFromCart = (product) => {\r\n    const updatedCartList = state.cartList.filter(\r\n      (current) => current.id !== product.id\r\n    );\r\n\r\n    dispatch({\r\n      type: \"REMOVE_FROM CART\",\r\n      payload: {\r\n        products: updatedCartList,\r\n      },\r\n    });\r\n  };\r\n\r\n  const updatetotal = (products) => {\r\n    let total = 0;\r\n    products.forEach((product) => (total = total + product.price));\r\n\r\n    dispatch({\r\n      type: \"UPDATE_TOTAL\",\r\n      payload: {\r\n        total,\r\n      },\r\n    });\r\n  };\r\n\r\n  const value = {\r\n    total: state.total,\r\n    cartList: state.cartList,\r\n    addToCart,\r\n    removeFromCart,\r\n  };\r\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\r\n};\r\n\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  return context;\r\n};\r\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,UAAU,QAAQ,OAAO;AAC7D,SAASC,WAAW,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE;EACZC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,WAAW,gBAAGT,aAAa,CAACM,YAAY,CAAC;AAEtD,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,UAAU,CAACC,WAAW,EAAEG,YAAY,CAAC;EAE/D,MAAMS,SAAS,GAAIC,OAAO,IAAK;IAC7B,MAAMC,eAAe,GAAGJ,KAAK,CAACN,QAAQ,CAACW,MAAM,CAACF,OAAO,CAAC;IACtDG,YAAY,CAACF,eAAe,CAAC;IAC7BH,QAAQ,CAAC;MACPM,IAAI,EAAE,aAAa;MACnBC,OAAO,EAAE;QACPC,QAAQ,EAAEL;MACZ;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMM,cAAc,GAAIP,OAAO,IAAK;IAClC,MAAMC,eAAe,GAAGJ,KAAK,CAACN,QAAQ,CAACiB,MAAM,CAC1CC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKV,OAAO,CAACU,EACtC,CAAC;IAEDZ,QAAQ,CAAC;MACPM,IAAI,EAAE,kBAAkB;MACxBC,OAAO,EAAE;QACPC,QAAQ,EAAEL;MACZ;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMU,WAAW,GAAIL,QAAQ,IAAK;IAChC,IAAId,KAAK,GAAG,CAAC;IACbc,QAAQ,CAACM,OAAO,CAAEZ,OAAO,IAAMR,KAAK,GAAGA,KAAK,GAAGQ,OAAO,CAACa,KAAM,CAAC;IAE9Df,QAAQ,CAAC;MACPM,IAAI,EAAE,cAAc;MACpBC,OAAO,EAAE;QACPb;MACF;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMsB,KAAK,GAAG;IACZtB,KAAK,EAAEK,KAAK,CAACL,KAAK;IAClBD,QAAQ,EAAEM,KAAK,CAACN,QAAQ;IACxBQ,SAAS;IACTQ;EACF,CAAC;EACD,oBAAOlB,OAAA,CAACI,WAAW,CAACsB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAnB,QAAA,EAAEA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E,CAAC;AAACvB,EAAA,CA9CWF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAgDzB,OAAO,MAAM2B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGtC,UAAU,CAACQ,WAAW,CAAC;EACvC,OAAO8B,OAAO;AAChB,CAAC;AAACD,GAAA,CAHWD,OAAO;AAAA,IAAAD,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}